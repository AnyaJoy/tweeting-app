{"version":3,"sources":["Components/Loader.js","Context/AppContext.js","Components/Firebase.js","Components/Form.js","Components/TweetList.js","Components/Home.js","tweet.png","Components/Profile.js","Components/Navbar.js","Components/Login.js","Components/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","AppContext","React","createContext","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","googleProvider","GoogleAuthProvider","signInWithGoogle","a","signInWithPopup","res","user","collection","where","uid","get","docs","length","dateNow","Date","dateFormatted","moment","format","doc","set","name","displayName","authProvider","email","dateCreated","console","log","error","alert","message","signInWithEmailAndPassword","password","registerWithEmailAndPassword","createUserWithEmailAndPassword","logout","signOut","Form","props","appContext","useContext","useAuthState","loading","history","useHistory","handleTweet","e","setIsLoading","timestamp","FieldValue","serverTimestamp","setInput","setTimeout","input","add","content","userName","currentUser","date","createdAt","then","ref","id","useEffect","replace","setCurrentUser","onSnapshot","snapshot","data","map","thisUser","filter","item","setIsInput","charNumber","setCharNumberChecker","orderBy","descendingArray","reverse","setTweetStorage","onChange","target","value","setCharNumber","onKeyDown","event","key","preventDefault","stopPropagation","placeholder","isLoading","onClick","disabled","isInput","charNumberChecker","TweetList","tweetStorage","index","Home","firebaseConfig","Profile","setURL","photoUrl","useState","imageAsFile","setImageAsFile","storage","getStorage","storageRef","URL","isUrl","setisUrl","uploadBytes","getDownloadURL","url","update","src","img","type","image","files","Navbar","location","currentLocation","useLocation","pathname","setHomeActive","setProfileActive","to","homeActive","profileActive","Login","setEmail","setPassword","setRedirect","handleSignIn","Signup","setName","App","serverData","setServerData","loginActive","setLoginActive","isSubmit","setIsSubmit","setLocation","redirect","Provider","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd2ceef1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <>\r\n            <div className=\"loader1\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nconst AppContext = React.createContext({\r\n});\r\n\r\nexport default AppContext\r\n","import firebase from \"firebase/compat/app\";\r\nimport moment from \"moment\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBMjyU3LTizzmKymU0u5x_IDGBKVR2PDgw\",\r\n  authDomain: \"react-project-2-anyajoy.firebaseapp.com\",\r\n  projectId: \"react-project-2-anyajoy\",\r\n  storageBucket: \"react-project-2-anyajoy.appspot.com\",\r\n  messagingSenderId: \"571997512755\",\r\n  appId: \"1:571997512755:web:48cbc30dbc1a0874f62f46\",\r\n  measurementId: \"G-KZWMH65NEN\",\r\n};\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst auth = app.auth();\r\nconst db = app.firestore();\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nconst signInWithGoogle = async () => {\r\n  try {\r\n    const res = await auth.signInWithPopup(googleProvider);\r\n    const user = res.user;\r\n    const query = await db\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"==\", user.uid)\r\n      .get();\r\n    if (query.docs.length === 0) {\r\n      let dateNow = new Date();\r\n      let dateFormatted = moment(dateNow).format(\"ddd DD MMM, HH:mm\");\r\n      await db.collection(\"users\").doc(user.uid).set({\r\n        uid: user.uid,\r\n        name: user.displayName,\r\n        authProvider: \"google\",\r\n        email: user.email,\r\n        dateCreated: dateFormatted,\r\n      });\r\n    }\r\n    console.log(\"signed in with google!\");\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst signInWithEmailAndPassword = async (email, password) => {\r\n  try {\r\n    await auth.signInWithEmailAndPassword(email, password);\r\n    console.log(\"signed in!\");\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n  try {\r\n    const res = await auth.createUserWithEmailAndPassword(email, password);\r\n    const user = res.user;\r\n    let dateNow = new Date();\r\n    let dateFormatted = moment(dateNow).format(\"ddd DD MMM, HH:mm\");\r\n    await db.collection(\"users\").doc(user.uid).set({\r\n      uid: user.uid,\r\n      name,\r\n      authProvider: \"local\",\r\n      email,\r\n      dateCreated: dateFormatted,\r\n    });\r\n    console.log(\"registered!\");\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst sendPasswordResetEmail = async (email) => {\r\n  try {\r\n    await auth.sendPasswordResetEmail(email);\r\n    alert(\"Password reset link sent!\");\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst logout = () => {\r\n  auth.signOut();\r\n  console.log(\"logged out!\");\r\n};\r\n\r\n\r\nexport {\r\n  auth,\r\n  db,\r\n  signInWithGoogle,\r\n  signInWithEmailAndPassword,\r\n  registerWithEmailAndPassword,\r\n  sendPasswordResetEmail,\r\n  logout,\r\n};\r\n","import React from \"react\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport Loader from \"./Loader\";\r\nimport moment from \"moment\";\r\nimport AppContext from \"../Context/AppContext\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\n\r\n// import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth } from \"./Firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import { initializeApp } from \"@firebase/app\";\r\n// import { getAnalytics } from \"@firebase/analytics\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBMjyU3LTizzmKymU0u5x_IDGBKVR2PDgw\",\r\n  authDomain: \"react-project-2-anyajoy.firebaseapp.com\",\r\n  projectId: \"react-project-2-anyajoy\",\r\n  storageBucket: \"react-project-2-anyajoy.appspot.com\",\r\n  messagingSenderId: \"571997512755\",\r\n  appId: \"1:571997512755:web:48cbc30dbc1a0874f62f46\",\r\n  measurementId: \"G-KZWMH65NEN\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\n\r\nexport default function Form(props) {\r\n  const appContext = useContext(AppContext);\r\n\r\n  const [user, loading] = useAuthState(auth);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (loading) {\r\n      // maybe trigger a loading screen\r\n      return;\r\n    }\r\n    if (user) {\r\n      history.replace(\"/\");\r\n      appContext.setCurrentUser(true);\r\n\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .onSnapshot((snapshot) => {\r\n          const data = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          console.log(data);\r\n          let thisUser = data.filter((item) => {\r\n            return item.id == user.uid;\r\n          });\r\n          console.log(thisUser);\r\n          appContext.setCurrentUser(thisUser[0]);\r\n        });\r\n    }\r\n    if (!user) {\r\n      history.replace(\"/login\");\r\n      appContext.setCurrentUser(false);\r\n    }\r\n  }, [user, loading]);\r\n\r\n  //enabling the tweet button\r\n  useEffect(() => {\r\n    if (appContext.input) {\r\n      appContext.setIsInput(true);\r\n    } else {\r\n      appContext.setIsInput(false);\r\n    }\r\n  }, [appContext.input]);\r\n\r\n  //checking the input length\r\n  useEffect(() => {\r\n    if (appContext.charNumber > 140) {\r\n      appContext.setCharNumberChecker(true);\r\n      appContext.setIsInput(false);\r\n    } else {\r\n      appContext.setCharNumberChecker(false);\r\n    }\r\n  }, [appContext.charNumber]);\r\n\r\n  //handling input submit\r\n  function handleInput(e) {\r\n    appContext.setInput(e.target.value);\r\n    appContext.setCharNumber(e.target.value.length);\r\n  }\r\n\r\n  //submitting on enter\r\n  function submitOnEnter(event) {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      handleTweet();\r\n    }\r\n  }\r\n\r\n  //sending the tweet to the server\r\n  function handleTweet(e) {\r\n    appContext.setIsLoading(true);\r\n\r\n    //capturing the date\r\n    let dateNow = new Date();\r\n    let dateFormatted = moment(dateNow).format(\"ddd DD MMM, HH:mm\");\r\n\r\n    //capturing timestamp\r\n    const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n    // emptying the input field and storage\r\n    appContext.setInput(\"\");\r\n\r\n    //sending to the server\r\n    setTimeout(() => {\r\n      if (appContext.input !== \"\") {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"tweets\")\r\n          .add({\r\n            content: appContext.input,\r\n            userName: appContext.currentUser.name,\r\n            date: dateFormatted,\r\n            createdAt: timestamp(),\r\n          })\r\n          .then((ref) => {\r\n            console.log(\"Added doc with ID: \", ref.id);\r\n          });\r\n        appContext.setIsLoading(false);\r\n      }\r\n    }, [500]);\r\n  }\r\n\r\n  // recieving the tweets from server on pageload and on change\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"tweets\")\r\n      .orderBy(\"createdAt\")\r\n      .onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        let descendingArray = data.reverse();\r\n\r\n        appContext.setTweetStorage(descendingArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-button-wrapper\">\r\n        <textarea\r\n          onChange={handleInput}\r\n          onKeyDown={submitOnEnter}\r\n          className=\"input\"\r\n          placeholder=\"What you have in mind...\"\r\n          value={appContext.input}\r\n        />\r\n\r\n        {appContext.isLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <button\r\n            onClick={handleTweet}\r\n            disabled={!appContext.isInput}\r\n            className={`input-${appContext.isInput}`}\r\n          >\r\n            Tweet\r\n          </button>\r\n        )}\r\n\r\n        <div className={`alert-${!appContext.charNumberChecker}`}>\r\n          The tweet can't contain more then 140 chars.\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport AppContext from \"../Context/AppContext\";\r\n\r\nexport default function TweetList() {\r\n  const appContext = useContext(AppContext);\r\n\r\n  return (\r\n    <>\r\n      {appContext.tweetStorage.map((item, index) => {\r\n        return (\r\n          <div key={item.id + index} className=\"tweet-wrapper\">\r\n            <div className=\"user-name-and-date\">\r\n              <div className=\"user-name\">{item.userName}</div>\r\n              <div className=\"date\">{item.date}</div>\r\n            </div>\r\n            <div className=\"tweet\">{item.content}</div>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import \"../App.css\";\r\nimport Form from \"./Form\";\r\nimport TweetList from \"./TweetList\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport AppContext from \"../Context/AppContext\";\r\n\r\nfunction Home() {\r\n  const appContext = useContext(AppContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <Form />\r\n        <div className=\"tweets-wrapper\">\r\n          <TweetList />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/tweet.138b90f2.png\";","import React from \"react\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport AppContext from \"../Context/AppContext\";\r\nimport Loader_profile from \"../Components/Loader_profile\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport { auth } from \"./Firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"firebase/storage\";\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport img from '../tweet.png';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBMjyU3LTizzmKymU0u5x_IDGBKVR2PDgw\",\r\n  authDomain: \"react-project-2-anyajoy.firebaseapp.com\",\r\n  projectId: \"react-project-2-anyajoy\",\r\n  storageBucket: \"react-project-2-anyajoy.appspot.com\",\r\n  messagingSenderId: \"571997512755\",\r\n  appId: \"1:571997512755:web:48cbc30dbc1a0874f62f46\",\r\n  measurementId: \"G-KZWMH65NEN\",\r\n};\r\n\r\nexport default function Profile() {\r\n  const appContext = useContext(AppContext);\r\n\r\n  const app = firebase.initializeApp(firebaseConfig);\r\n  const auth = app.auth();\r\n  const db = app.firestore();\r\n\r\n  // checking if there's a user\r\n  const [user, loading] = useAuthState(auth);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (loading) {\r\n      return;\r\n    }\r\n    //if yes redirecting to home page and loading current user data\r\n    if (user) {\r\n      history.replace(\"/profile\");\r\n      appContext.setCurrentUser(user);\r\n\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .onSnapshot((snapshot) => {\r\n          const data = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          let thisUser = data.filter((item) => {\r\n            return item.id == user.uid;\r\n          });\r\n          appContext.setCurrentUser(thisUser[0]);\r\n        });\r\n    }\r\n\r\n    //if not redirecting to login\r\n    if (!user) {\r\n      history.replace(\"/login\");\r\n      appContext.setCurrentUser(false);\r\n    }\r\n  }, [user, loading]);\r\n\r\n  useEffect(() => {\r\n    setURL(appContext.currentUser.photoUrl);\r\n  }, [appContext.currentUser]);\r\n\r\n  // uploading profile pjoto\r\n  const [imageAsFile, setImageAsFile] = useState();\r\n  const storage = getStorage();\r\n  const storageRef = ref(storage, appContext.currentUser.uid);\r\n\r\n  const [URL, setURL] = useState();\r\n  const [isUrl, setisUrl] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (imageAsFile) {\r\n      console.log(\"start of upload\");\r\n\r\n      //sending the photo to storage\r\n      uploadBytes(storageRef, imageAsFile).then((snapshot) => {\r\n        console.log(\"Uploaded a blob or file!\");\r\n      });\r\n\r\n      //getting back a url and updating the user doc in firestore\r\n      getDownloadURL(storageRef).then((url) => {\r\n        console.log(url);\r\n        setURL(url);\r\n        setTimeout(() => {\r\n          setisUrl(true)\r\n        },[1000])\r\n        db.collection(\"users\").doc(appContext.currentUser.uid).update({\r\n          photoUrl: url,\r\n        });\r\n        setTimeout(() => {\r\n          setisUrl(false)\r\n        },[5000])\r\n      });\r\n    }\r\n  }, [imageAsFile]);\r\n\r\n  const handleImageAsFile = (e) => {\r\n    const image = e.target.files[0];\r\n    setImageAsFile(image);\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-wrapper\">\r\n      <div className=\"header-profile\">Profile</div>\r\n      <div className=\"profile-and-picture-wrapper\">\r\n        <div className=\"profile-info\">\r\n          <div>\r\n            <span>User name: </span>\r\n            <span className=\"profile-info-fetched\">\r\n              {appContext.currentUser.name}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"profile-email\">E-mail: </span>\r\n            <span className=\"profile-info-fetched\">\r\n              {appContext.currentUser.email}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"profile-createdAt\">Created at: </span>\r\n            <span className=\"profile-info-fetched\">\r\n              {appContext.currentUser.dateCreated}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"photo-wrapper\">\r\n          <div className=\"profile-picture\">{URL ? <img src={URL} /> : <img src={img} />}</div>\r\n          <div className=\"update-picture-button\">\r\n            Update photo\r\n            <input\r\n              type=\"file\"\r\n              className=\"upload-photo\"\r\n              name=\"photo\"\r\n              onChange={handleImageAsFile}\r\n            ></input>\r\n          </div>\r\n          <div className={`notification-submit-${isUrl}`}>\r\n            Saved! Reload the page for update.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport AppContext from \"../Context/AppContext\";\r\nimport \"../App.css\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { logout } from \"./Firebase\";\r\n\r\nexport default function Navbar() {\r\n  const appContext = useContext(AppContext);\r\n\r\n  let location = \"\";\r\n\r\n  var currentLocation = useLocation();\r\n\r\n  //checks location on page load and user change\r\n  useEffect(() => {\r\n    if (currentLocation.pathname === \"/\") {\r\n      appContext.setHomeActive(true);\r\n      appContext.setProfileActive(false);\r\n    }\r\n    if (currentLocation.pathname === \"/profile\") {\r\n      appContext.setHomeActive(false);\r\n      appContext.setProfileActive(true);\r\n    }\r\n  }, [appContext.currentUser]);\r\n\r\n  //checks location on navbar click\r\n  const checkLocation = () => {\r\n    if (location === \"home\") {\r\n      appContext.setHomeActive(true);\r\n      appContext.setProfileActive(false);\r\n    }\r\n    if (location === \"profile\") {\r\n      appContext.setHomeActive(false);\r\n      appContext.setProfileActive(true);\r\n    }\r\n  };\r\n\r\n  function changeLocationHome() {\r\n    location = \"home\";\r\n  }\r\n\r\n  function changeLocationProfile() {\r\n    location = \"profile\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"nav-bar\" onClick={checkLocation}>\r\n      {appContext.currentUser ? (\r\n        <span>\r\n          <Link\r\n            to=\"/\"\r\n            onClick={changeLocationHome}\r\n            className={`home-${appContext.homeActive}`}\r\n          >\r\n            Home\r\n          </Link>\r\n          <Link\r\n            to=\"/profile\"\r\n            onClick={changeLocationProfile}\r\n            className={`profile-${appContext.profileActive}`}\r\n          >\r\n            Profile\r\n          </Link>\r\n          <span\r\n            onClick={logout}\r\n            className=\"logout\"\r\n            // className={`login-${appContext.loginActive}`}\r\n          >\r\n            Logout [➜\r\n          </span>\r\n        </span>\r\n      ) : (\r\n        <Link\r\n          to=\"/login\"\r\n          // onClick={changeLocationLogin}\r\n          className={`login-true`}\r\n        >\r\n          Login ➜]\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport AppContext from \"../Context/AppContext\";\r\nimport Loader from \"./Loader\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  auth,\r\n  signInWithEmailAndPassword,\r\n  signInWithGoogle,\r\n  logout,\r\n} from \"./Firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nexport default function Login() {\r\n  const appContext = useContext(AppContext);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, loading, error] = useAuthState(auth);\r\n\r\n  // checking if there's a user\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    console.log(\"running!\")\r\n    if (loading) {\r\n      return;\r\n    }\r\n    //if yes redirecting to home page and loading current user data\r\n    if (user) {\r\n      history.replace(\"/\")\r\n      appContext.setCurrentUser(user)\r\n    }\r\n     //if not redirecting to login\r\n    if (!user) {\r\n      history.replace(\"/login\")\r\n      appContext.setCurrentUser(false)\r\n    }\r\n  }, [user, loading])\r\n\r\n\r\n  const handleSignIn = (email, password) => {\r\n    signInWithEmailAndPassword(email, password)\r\n    appContext.setCurrentUser(\"true\");\r\n    appContext.setRedirect(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <span className=\"header-login\">Login</span>\r\n      <span className=\"signup-wrapper\">\r\n        <span className=\"header-signup\">First time here? - </span>\r\n        <span>\r\n          <Link to=\"/signup\" className=\"header-signup-link\">\r\n            Sign Up\r\n          </Link>\r\n        </span>\r\n      </span>\r\n\r\n      <div className=\"user-name-description\">E-mail</div>\r\n      <input\r\n        className=\"user-name-input\"\r\n        placeholder=\"best-alex-ever@mail.com\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      ></input>\r\n      <div className=\"user-name-description\">Password</div>\r\n      <input\r\n        type=\"password\"\r\n        className=\"user-name-input\"\r\n        placeholder=\"********\"\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        value={password}\r\n      ></input>\r\n\r\n      {appContext.isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"login-buttons\">\r\n          <button\r\n            onClick={() => {handleSignIn(email, password)}}\r\n            disabled={false}\r\n            className={`login-button-${true}`}\r\n          >\r\n            Log in\r\n          </button>\r\n          <button onClick={signInWithGoogle} className={`login-button-google`}>\r\n            Login with Google\r\n          </button>\r\n         \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport AppContext from \"../Context/AppContext\";\r\nimport Loader from \"./Loader\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  auth,\r\n  registerWithEmailAndPassword,\r\n  signInWithGoogle,\r\n} from \"./Firebase\";\r\n\r\nexport default function Signup() {\r\n  const appContext = useContext(AppContext);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [user, loading, error] = useAuthState(auth);\r\n\r\n  // checking if there's a user\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    console.log(\"running!\");\r\n    if (loading) {\r\n      return;\r\n    }\r\n    //if yes redirecting to home page and loading current user data\r\n    if (user) {\r\n      history.replace(\"/\");\r\n      appContext.setCurrentUser(user);\r\n    }\r\n    if (!user) {\r\n      appContext.setCurrentUser(false);\r\n    }\r\n  }, [user, loading]);\r\n\r\n  const register = () => {\r\n    if (!name) alert(\"Please enter name\");\r\n    registerWithEmailAndPassword(name, email, password);\r\n  };  \r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <span className=\"header-login\">Sign Up</span>\r\n      <span className=\"signup-wrapper\">\r\n        <span className=\"header-signup\">Already signed-up? - </span>\r\n        <span>\r\n          <Link to=\"/login\" className=\"header-signup-link\">\r\n            Login\r\n          </Link>\r\n        </span>\r\n      </span>\r\n\r\n      <div className=\"user-name-description\">Name</div>\r\n      <input\r\n        // onKeyDown={submitOnEnter}\r\n        className=\"user-name-input\"\r\n        placeholder=\"Alex\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      ></input>\r\n      <div className=\"user-name-description\">E-mail</div>\r\n      <input\r\n        // onKeyDown={submitOnEnter}\r\n        className=\"user-name-input\"\r\n        placeholder=\"best-alex-ever@mail.com\"\r\n        value={appContext.email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      ></input>\r\n      <div className=\"user-name-description\">Password</div>\r\n      <input\r\n        // onKeyDown={submitOnEnter}\r\n        type=\"password\"\r\n        className=\"user-name-input\"\r\n        placeholder=\"********\"\r\n        value={appContext.password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      ></input>\r\n      {/* <div className=\"user-name-description\">Confirm password</div>\r\n      <input\r\n        // onKeyDown={submitOnEnter}\r\n        type=\"password\"\r\n        className=\"user-name-input\"\r\n        placeholder=\"********\"\r\n        // onChange={handleChangeUserName}\r\n        // value={appContext.userNameInput}\r\n      ></input> */}\r\n\r\n      {appContext.isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"signup-buttons\">\r\n          <button\r\n            onClick={register}\r\n            // disabled={!appContext.isInput}\r\n            disabled={false}\r\n            className={`signup-button-${true}`}\r\n          >\r\n            Sign Up\r\n          </button>\r\n          <button className=\"signup-button-google\" onClick={signInWithGoogle}>\r\n            Sign up with Google\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* <div className={`notification-submit-${appContext.isSubmit}`}>Saved!</div> */}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Home from \"./Components/Home\";\nimport Profile from \"./Components/Profile\";\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Login\";\nimport Signup from \"./Components/Signup\";\nimport { useState, useEffect } from \"react\";\nimport AppContext from \"./Context/AppContext\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  //server storage\n  const [serverData, setServerData] = useState([]);\n  //location checkers\n  const [homeActive, setHomeActive] = useState(true);\n  const [profileActive, setProfileActive] = useState(false);\n  const [loginActive, setLoginActive] = useState(false);\n  // const [signupActive, setSignupActive] = useState(false);\n  //input length\n  const [charNumber, setCharNumber] = useState();\n  const [charNumberChecker, setCharNumberChecker] = useState(false);\n  //input checker\n  const [isInput, setIsInput] = useState(false);\n  const [input, setInput] = useState();\n  //loader checker\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSubmit, setIsSubmit] = useState(false);\n  //tweet storage\n  const [tweetStorage, setTweetStorage] = useState([]);\n  //current page location\n  const [location, setLocation] = useState(\"\");\n  const [redirect, setRedirect] = useState();\n\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    console.log(currentUser.name);\n  }, [currentUser]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        serverData: serverData,\n        setServerData: setServerData,\n        isInput: isInput,\n        setIsInput: setIsInput,\n        input: input,\n        setInput: setInput,\n        charNumber: charNumber,\n        setCharNumber: setCharNumber,\n        charNumberChecker: charNumberChecker,\n        setCharNumberChecker: setCharNumberChecker,\n        isLoading: isLoading,\n        setIsLoading: setIsLoading,\n        homeActive: homeActive,\n        setHomeActive: setHomeActive,\n        profileActive: profileActive,\n        setProfileActive: setProfileActive,\n        loginActive: loginActive,\n        setLoginActive: setLoginActive,\n        isSubmit: isSubmit,\n        setIsSubmit: setIsSubmit,\n        tweetStorage: tweetStorage,\n        setTweetStorage: setTweetStorage,\n        location: location,\n        setLocation: setLocation,\n        redirect: redirect,\n        setRedirect: setRedirect,\n        currentUser: currentUser,\n        setCurrentUser: setCurrentUser,\n      }}\n    >\n      <div className=\"content-wrapper\">\n        <Router>\n          {redirect && <Redirect to={redirect} />}\n          <Navbar />\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={Signup} />\n        </Router>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}